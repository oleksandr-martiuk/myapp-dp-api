# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The day model"""
type DayType {
  """ID of the day"""
  id: ID!

  """The name of the day"""
  name: String!

  """The short name of the day"""
  shortName: String!
}

"""The language model"""
type LanguageType {
  """ID of the language"""
  id: ID!

  """The name of the language"""
  name: String!
}

type Mutation {
  createUser(input: UserCreateInput!): UserType!
  updateUser(input: UserUpdateInput!): UserType!
  deleteUser(id: String!): UserType!
}

type Query {
  readAllDays: [DayType!]!
  readDay(id: String!): DayType!
  readAllUsers: [UserType!]!
  readUser(id: String!): UserType!
  readAllLanguages: [LanguageType!]!
  readLanguage(id: String!): LanguageType!
  readAllTechnologies: [TechnologyType!]!
  readTechnology(id: String!): TechnologyType!
  readAllStudyPrograms: [StudyProgramType!]!
  readStudyProgram(id: String!): StudyProgramType!
}

"""The study program model"""
type StudyProgramType {
  """ID of the study program"""
  id: ID!

  """The name of the study program"""
  name: String!
}

input TeachingTimeInput {
  from: String
  to: String
}

input TeachingTimeUpdateInput {
  from: String
  to: String
}

"""The technology model"""
type TechnologyType {
  """ID of the technology"""
  id: ID!

  """The name of the technology"""
  name: String!
}

input UserContactsInput {
  country: String!
  city: String
}

input UserContactsUpdateInput {
  country: String!
  city: String
}

"""The user contacts"""
type UserContactType {
  """The country of the user"""
  country: String!

  """The city of the user"""
  city: String!
}

input UserCreateInput {
  firstName: String!
  lastName: String!
  email: String!
  contacts: UserContactsInput!
  description: UserDescriptionInput
  studyPrograms: [ID!]
  languages: [ID!]
  technologies: [ID!]
  teachingTimes: [TeachingTimeInput!]
}

input UserDescriptionInput {
  short: String
  long: String
}

"""The user model"""
type UserDescriptionType {
  """The short description of user experience"""
  short: String!

  """The long description of user experience"""
  long: String!
}

input UserDescriptionUpdateInput {
  short: String
  long: String
}

"""The user model"""
type UserTeachingTimeType {
  """The start time of user for teaching"""
  from: String!

  """The end time of user for teaching"""
  to: String!
}

"""The user model"""
type UserType {
  """ID of the user"""
  id: ID!

  """The first name of the user"""
  firstName: String!

  """The last name of the user"""
  lastName: String!

  """The email of the user"""
  email: String!

  """The contacts of the user"""
  contacts: UserContactType!

  """The description of the user"""
  description: UserDescriptionType!

  """The study programs of the user"""
  studyPrograms: [StudyProgramType!]!

  """The languages of the user"""
  languages: [LanguageType!]!

  """The technologies of the user"""
  technologies: [TechnologyType!]!

  """The available teaching times of the user"""
  teachingTimes: [UserTeachingTimeType!]!
}

input UserUpdate {
  contacts: UserContactsUpdateInput
  description: UserDescriptionUpdateInput
  studyPrograms: [String!]
  languages: [String!]
  technologies: [String!]
  teachingTimes: [TeachingTimeUpdateInput!]
}

input UserUpdateInput {
  id: String!
  update: UserUpdate!
}
